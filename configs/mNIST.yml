interfaces:
  image1:  # Interface name here, this is used in defining the respective mesh name
    type: image  # This maps to a dictionary that resolves to a particular interface class
    source: mnist_dog
    mesh_defs:  # Certain interfaces like nist have inputs and outputs so multiple definitions for meshes can be provided
      image1:  # This is the name of the mesh and should match the interface definition, this usually overlaps with the interface name
        starting_ta: 2
        starting_rank: 2
        abstraction_limit: 6
        static: False  # The interface instantiates the mesh definition and any options here overwrite the mesh def
        output_mesh_ids:
          - basal

meshes:
  basal:
    config:
      mesh_type: 3  # BASAL_GANGLIA
      starting_ta: 50
      max_ta: 80
      number_dimensions: 3

